# -*- coding: utf-8 -*-
# Generated by Django 1.9.6 on 2016-05-05 18:02
from __future__ import unicode_literals

import ckeditor_uploader.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import loffi.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='E-mail адрес')),
                ('name', models.CharField(max_length=50, verbose_name='Имя')),
                ('is_staff', models.BooleanField(default=False, help_text='Доступ к администрированию сайта', verbose_name='Администратор')),
                ('is_active', models.BooleanField(default=True, help_text='Активен ли пользователь', verbose_name='Активированный аккаунт')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name_plural': 'Пользователи',
                'verbose_name': 'Пользователь',
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Название')),
                ('link', models.CharField(help_text="Для отображения в адресной строке браузера, английскими буквами, например 'first-article'", max_length=50, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_-]*$', 'Только латинские буквы и цифры.')], verbose_name='Ссылка')),
                ('short_text', models.TextField(help_text='Для отображения в общем списке новостей', max_length=650, verbose_name='Краткое содержание')),
                ('text', ckeditor_uploader.fields.RichTextUploadingField(verbose_name='Содержание статьи')),
                ('pub_date', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(help_text='Для отображения в общем списке новостей', upload_to='news', verbose_name='Изображение статьи')),
            ],
            options={
                'ordering': ['-pub_date'],
                'verbose_name_plural': 'Публикации',
                'verbose_name': 'Новость',
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name_plural': 'Корзины',
                'verbose_name': 'Корзина',
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.PositiveSmallIntegerField(default=1, verbose_name='Количество')),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loffi.Cart', verbose_name='Корзина')),
            ],
            options={
                'verbose_name_plural': 'Товары в корзине',
                'verbose_name': 'Товар в корзине',
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tel', models.CharField(blank=True, max_length=25, validators=[django.core.validators.RegexValidator(message="Телефон должен быть введён в формате: '+7 (999) 999 9999'.", regex='^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$')], verbose_name='Телефон')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='details', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name_plural': 'Информация',
                'verbose_name': 'Информация',
            },
        ),
        migrations.CreateModel(
            name='ItemClass',
            fields=[
                ('title', models.CharField(max_length=100, verbose_name='Название раздела')),
                ('link', models.CharField(help_text='Название для адресной строки браузера', max_length=50, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_-]*$', 'Только латинские буквы и цифры.')], verbose_name='Название на английском')),
                ('description', models.CharField(max_length=500, verbose_name='Описание раздела')),
                ('keywords', models.CharField(default='', help_text='Для поисковиков', max_length=200, verbose_name='Ключевые слова')),
                ('image', models.ImageField(help_text='Соотношение сторон должно быть 16x9', upload_to='sec_img', verbose_name='Изображение раздела')),
            ],
            options={
                'verbose_name_plural': 'Разделы',
                'verbose_name': 'Раздел',
            },
        ),
        migrations.CreateModel(
            name='ItemImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=loffi.models.subclass_directory_path, verbose_name='Изображение')),
            ],
            options={
                'verbose_name_plural': 'Изображения',
                'verbose_name': 'Изображение',
            },
        ),
        migrations.CreateModel(
            name='ItemModel',
            fields=[
                ('title', models.CharField(max_length=130, verbose_name='Название')),
                ('link', models.CharField(help_text='Название для использования в ссылках', max_length=130, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_-]*$', 'Только латинские буквы и цифры.')], verbose_name='Название на английском')),
                ('description', models.TextField(max_length=1500, verbose_name='Описание')),
                ('price', models.PositiveIntegerField(default=0, verbose_name='Цена')),
                ('materials', models.CharField(max_length=200, verbose_name='Материал')),
                ('size_x', models.FloatField(default=0, help_text='метров, м', verbose_name='Ширина')),
                ('size_y', models.FloatField(default=0, help_text='метров, м', verbose_name='Длина')),
                ('size_z', models.FloatField(blank=True, default=0, help_text='метров, м', null=True, verbose_name='Высота')),
                ('add_date', models.DateTimeField(auto_now=True)),
                ('keywords', models.CharField(default='', help_text='Для поисковиков', max_length=200, verbose_name='Ключевые слова')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='loffi.ItemClass', verbose_name='Раздел')),
            ],
            options={
                'ordering': ['-add_date'],
                'verbose_name_plural': 'Товары',
                'verbose_name': 'Товар',
            },
        ),
        migrations.CreateModel(
            name='ItemSubClass',
            fields=[
                ('title', models.CharField(max_length=50, verbose_name='Название подраздела')),
                ('link', models.CharField(help_text='Название для адресной строки браузера', max_length=50, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^[0-9a-zA-Z_-]*$', 'Только латинские буквы и цифры.')], verbose_name='Название на английском')),
                ('title_single', models.CharField(help_text='Для использования в отдельных объектах', max_length=50, verbose_name='Название в единственном числе')),
                ('description', models.TextField(max_length=700, verbose_name='Описание подраздела')),
                ('keywords', models.CharField(default='', help_text='Для поисковиков', max_length=200, verbose_name='Ключевые слова')),
                ('image', models.ImageField(help_text='Соотношение сторон должно быть 16x9', upload_to='sub_img', verbose_name='Изображение подраздела')),
                ('super_class', models.ForeignKey(help_text='Раздел, к которому относится подраздел', on_delete=django.db.models.deletion.CASCADE, related_name='subclasses', to='loffi.ItemClass', verbose_name='Раздел')),
            ],
            options={
                'verbose_name_plural': 'Подразделы',
                'verbose_name': 'Подраздел',
            },
        ),
        migrations.CreateModel(
            name='MainSlider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(help_text='Соотношение сторон должно быть 16x9', upload_to='main_slider/', verbose_name='Фоновое изображение')),
                ('link', models.CharField(help_text='Куда переводить пользователя при нажатии на изображение', max_length=250, null=True, verbose_name='Ссылка')),
                ('title', models.CharField(max_length=150, verbose_name='Заголовок слайда')),
            ],
            options={
                'verbose_name_plural': 'Слайды на главной',
                'verbose_name': 'Слайд на главной',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField(blank=True, verbose_name='Дополнительная информация')),
                ('answer', models.TextField(blank=True, null=True, verbose_name='Ответ администратора')),
                ('create_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Время создания заказа')),
                ('answer_date', models.DateTimeField(auto_now=True, null=True, verbose_name='Время обработки заказа')),
                ('contact', models.CharField(default='', max_length=20, null=True, verbose_name='Контактные данные')),
                ('cart', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='order', to='loffi.Cart', verbose_name='Товары')),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL, verbose_name='Заказчик')),
            ],
            options={
                'ordering': ['-create_date'],
                'verbose_name_plural': 'Заказы',
                'verbose_name': 'Заказ',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=1000, verbose_name='Вопрос пользователя')),
                ('answer', models.CharField(max_length=1000, verbose_name='Ответ администратора')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'ordering': ['-pub_date'],
                'verbose_name_plural': 'Вопросы пользователей',
                'verbose_name': 'Вопрос',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=60, verbose_name='Статус')),
                ('details', models.CharField(help_text='Более детальное описание статуса', max_length=600, verbose_name='Подробнее')),
            ],
            options={
                'verbose_name_plural': 'Статусы заказов',
                'verbose_name': 'Статус',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='status',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='orders', to='loffi.Status', verbose_name='Статус заказа'),
        ),
        migrations.AddField(
            model_name='itemmodel',
            name='subclass',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='loffi.ItemSubClass', verbose_name='Подраздел'),
        ),
        migrations.AddField(
            model_name='itemimage',
            name='model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='loffi.ItemModel', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='cartitem',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='loffi.ItemModel', verbose_name='Товар'),
        ),
        migrations.AddField(
            model_name='cart',
            name='items',
            field=models.ManyToManyField(related_name='carts', through='loffi.CartItem', to='loffi.ItemModel', verbose_name='Товары'),
        ),
        migrations.AddField(
            model_name='cart',
            name='owner',
            field=models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cart', to=settings.AUTH_USER_MODEL, verbose_name='Покупатель'),
        ),
    ]
